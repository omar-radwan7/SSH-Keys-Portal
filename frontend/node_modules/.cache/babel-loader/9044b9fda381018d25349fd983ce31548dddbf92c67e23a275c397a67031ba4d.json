{"ast":null,"code":"var _jsxFileName = \"/home/oradwan/Desktop/SSH keys portal/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n    case 'RESTORE_SESSION':\n      return {\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true\n      };\n    case 'LOGOUT':\n      return {\n        user: null,\n        token: null,\n        isAuthenticated: false\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Restore session on app load\n  useEffect(() => {\n    const token = localStorage.getItem('auth_token');\n    const userStr = localStorage.getItem('user');\n    if (token && userStr) {\n      try {\n        const user = JSON.parse(userStr);\n        dispatch({\n          type: 'RESTORE_SESSION',\n          payload: {\n            user,\n            token\n          }\n        });\n      } catch (error) {\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await apiService.login(username, password);\n      if (response.success && response.data) {\n        const {\n          token,\n          user\n        } = response.data;\n        localStorage.setItem('auth_token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            user,\n            token\n          }\n        });\n        return true;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  };\n  const logout = async () => {\n    try {\n      await apiService.logout();\n    } catch (error) {\n      // Ignore logout errors\n    } finally {\n      localStorage.removeItem('auth_token');\n      localStorage.removeItem('user');\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  };\n  const isAdmin = () => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === 'admin';\n  };\n  const isAuditor = () => {\n    var _state$user2, _state$user3;\n    return ((_state$user2 = state.user) === null || _state$user2 === void 0 ? void 0 : _state$user2.role) === 'auditor' || ((_state$user3 = state.user) === null || _state$user3 === void 0 ? void 0 : _state$user3.role) === 'admin';\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      state,\n      login,\n      logout,\n      isAdmin,\n      isAuditor\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","apiService","jsxDEV","_jsxDEV","AuthContext","undefined","authReducer","state","action","type","user","payload","token","isAuthenticated","initialState","AuthProvider","children","_s","dispatch","localStorage","getItem","userStr","JSON","parse","error","removeItem","login","username","password","response","success","data","setItem","stringify","logout","isAdmin","_state$user","role","isAuditor","_state$user2","_state$user3","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/oradwan/Desktop/SSH keys portal/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { AuthState, User } from '../types';\nimport apiService from '../services/api';\n\ninterface AuthContextType {\n  state: AuthState;\n  login: (username: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  isAdmin: () => boolean;\n  isAuditor: () => boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ntype AuthAction =\n  | { type: 'LOGIN_SUCCESS'; payload: { user: User; token: string } }\n  | { type: 'LOGOUT' }\n  | { type: 'RESTORE_SESSION'; payload: { user: User; token: string } };\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n    case 'RESTORE_SESSION':\n      return {\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n      };\n    case 'LOGOUT':\n      return {\n        user: null,\n        token: null,\n        isAuthenticated: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState: AuthState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n};\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Restore session on app load\n  useEffect(() => {\n    const token = localStorage.getItem('auth_token');\n    const userStr = localStorage.getItem('user');\n    \n    if (token && userStr) {\n      try {\n        const user = JSON.parse(userStr);\n        dispatch({ type: 'RESTORE_SESSION', payload: { user, token } });\n      } catch (error) {\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n\n  const login = async (username: string, password: string): Promise<boolean> => {\n    try {\n      const response = await apiService.login(username, password);\n      \n      if (response.success && response.data) {\n        const { token, user } = response.data;\n        \n        localStorage.setItem('auth_token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        dispatch({ type: 'LOGIN_SUCCESS', payload: { user, token } });\n        return true;\n      }\n      \n      return false;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await apiService.logout();\n    } catch (error) {\n      // Ignore logout errors\n    } finally {\n      localStorage.removeItem('auth_token');\n      localStorage.removeItem('user');\n      dispatch({ type: 'LOGOUT' });\n    }\n  };\n\n  const isAdmin = (): boolean => {\n    return state.user?.role === 'admin';\n  };\n\n  const isAuditor = (): boolean => {\n    return state.user?.role === 'auditor' || state.user?.role === 'admin';\n  };\n\n  return (\n    <AuthContext.Provider value={{ state, login, logout, isAdmin, isAuditor }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}