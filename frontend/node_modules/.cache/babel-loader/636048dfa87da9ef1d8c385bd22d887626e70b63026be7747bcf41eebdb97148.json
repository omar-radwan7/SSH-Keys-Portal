{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect}from'react';import apiService from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);const authReducer=(state,action)=>{switch(action.type){case'LOGIN_SUCCESS':case'RESTORE_SESSION':return{user:action.payload.user,token:action.payload.token,isAuthenticated:true};case'LOGOUT':return{user:null,token:null,isAuthenticated:false};default:return state;}};const initialState={user:null,token:null,isAuthenticated:false};export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);// Restore session on app load\nuseEffect(()=>{const token=localStorage.getItem('auth_token');const userStr=localStorage.getItem('user');if(token&&userStr){try{const user=JSON.parse(userStr);dispatch({type:'RESTORE_SESSION',payload:{user,token}});}catch(error){localStorage.removeItem('auth_token');localStorage.removeItem('user');}}},[]);const login=async(username,password)=>{try{const response=await apiService.login(username,password);if(response.success&&response.data){const{token,user}=response.data;localStorage.setItem('auth_token',token);localStorage.setItem('user',JSON.stringify(user));dispatch({type:'LOGIN_SUCCESS',payload:{user,token}});return true;}return false;}catch(error){return false;}};const logout=async()=>{try{await apiService.logout();}catch(error){// Ignore logout errors\n}finally{localStorage.removeItem('auth_token');localStorage.removeItem('user');dispatch({type:'LOGOUT'});}};const isAdmin=()=>{var _state$user;return((_state$user=state.user)===null||_state$user===void 0?void 0:_state$user.role)==='admin';};const isAuditor=()=>{var _state$user2,_state$user3;return((_state$user2=state.user)===null||_state$user2===void 0?void 0:_state$user2.role)==='auditor'||((_state$user3=state.user)===null||_state$user3===void 0?void 0:_state$user3.role)==='admin';};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{state,login,logout,isAdmin,isAuditor},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","apiService","jsx","_jsx","AuthContext","undefined","authReducer","state","action","type","user","payload","token","isAuthenticated","initialState","AuthProvider","_ref","children","dispatch","localStorage","getItem","userStr","JSON","parse","error","removeItem","login","username","password","response","success","data","setItem","stringify","logout","isAdmin","_state$user","role","isAuditor","_state$user2","_state$user3","Provider","value","useAuth","context","Error"],"sources":["/home/oradwan/Desktop/SSH keys portal/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { AuthState, User } from '../types';\nimport apiService from '../services/api';\n\ninterface AuthContextType {\n  state: AuthState;\n  login: (username: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  isAdmin: () => boolean;\n  isAuditor: () => boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ntype AuthAction =\n  | { type: 'LOGIN_SUCCESS'; payload: { user: User; token: string } }\n  | { type: 'LOGOUT' }\n  | { type: 'RESTORE_SESSION'; payload: { user: User; token: string } };\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n    case 'RESTORE_SESSION':\n      return {\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n      };\n    case 'LOGOUT':\n      return {\n        user: null,\n        token: null,\n        isAuthenticated: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState: AuthState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n};\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Restore session on app load\n  useEffect(() => {\n    const token = localStorage.getItem('auth_token');\n    const userStr = localStorage.getItem('user');\n    \n    if (token && userStr) {\n      try {\n        const user = JSON.parse(userStr);\n        dispatch({ type: 'RESTORE_SESSION', payload: { user, token } });\n      } catch (error) {\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n\n  const login = async (username: string, password: string): Promise<boolean> => {\n    try {\n      const response = await apiService.login(username, password);\n      \n      if (response.success && response.data) {\n        const { token, user } = response.data;\n        \n        localStorage.setItem('auth_token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        dispatch({ type: 'LOGIN_SUCCESS', payload: { user, token } });\n        return true;\n      }\n      \n      return false;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await apiService.logout();\n    } catch (error) {\n      // Ignore logout errors\n    } finally {\n      localStorage.removeItem('auth_token');\n      localStorage.removeItem('user');\n      dispatch({ type: 'LOGOUT' });\n    }\n  };\n\n  const isAdmin = (): boolean => {\n    return state.user?.role === 'admin';\n  };\n\n  const isAuditor = (): boolean => {\n    return state.user?.role === 'auditor' || state.user?.role === 'admin';\n  };\n\n  return (\n    <AuthContext.Provider value={{ state, login, logout, isAdmin, isAuditor }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}